╔══════════════════════════════════════════════════════════════════════════════╗
║                   USDCOP OHLCV MIGRATION - EXECUTION GUIDE                   ║
║                              Quick Reference Card                             ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────────────────┐
│ 🚀 QUICK START (3 Commands)                                                 │
└──────────────────────────────────────────────────────────────────────────────┘

  1. Check Status:
     ./scripts/check_migration_status.sh

  2. Run Migration:
     ./scripts/run_migrations.sh

  3. Verify:
     ./scripts/check_migration_status.sh

┌──────────────────────────────────────────────────────────────────────────────┐
│ 📋 WHAT GETS CREATED                                                        │
└──────────────────────────────────────────────────────────────────────────────┘

  New Columns:    timeframe, open, high, low, close, spread, data_quality
  New Indexes:    13 optimized indexes for time-series queries
  New Constraints: 11 validation rules for data integrity

┌──────────────────────────────────────────────────────────────────────────────┐
│ ⏱️  TIME ESTIMATES                                                           │
└──────────────────────────────────────────────────────────────────────────────┘

  100K rows   →  ~2 minutes
  500K rows   →  ~8 minutes
  1M rows     →  ~13 minutes
  5M rows     →  ~36 minutes

┌──────────────────────────────────────────────────────────────────────────────┐
│ 💾 STORAGE IMPACT                                                           │
└──────────────────────────────────────────────────────────────────────────────┘

  Table Size:  +40%  (new OHLCV columns)
  Index Size:  +150% (13 new indexes)
  Total:       +58%  (average)

┌──────────────────────────────────────────────────────────────────────────────┐
│ 🔄 ROLLBACK (If Needed)                                                     │
└──────────────────────────────────────────────────────────────────────────────┘

  ./scripts/run_migrations.sh --rollback

  ⚠️  This removes OHLCV columns but preserves all original data

┌──────────────────────────────────────────────────────────────────────────────┐
│ ✅ SAFETY FEATURES                                                          │
└──────────────────────────────────────────────────────────────────────────────┘

  ✓ Automatic backup before migration
  ✓ Idempotent (safe to re-run)
  ✓ No data loss (original columns preserved)
  ✓ Transaction-wrapped (atomic operations)
  ✓ Complete logging to /logs/
  ✓ Rollback capability

┌──────────────────────────────────────────────────────────────────────────────┐
│ 📁 FILE LOCATIONS                                                           │
└──────────────────────────────────────────────────────────────────────────────┘

  SQL Migrations:  postgres/migrations/00*.sql
  Rollback:        postgres/migrations/rollback_ohlcv.sql
  Execution:       scripts/run_migrations.sh
  Status Check:    scripts/check_migration_status.sh
  Logs:            logs/migration_*.log
  Backups:         logs/backup_*.sql

┌──────────────────────────────────────────────────────────────────────────────┐
│ 🆘 TROUBLESHOOTING                                                          │
└──────────────────────────────────────────────────────────────────────────────┘

  Problem: Cannot connect to database
  Fix:     docker ps | grep postgres
           docker logs usdcop-postgres-timescale

  Problem: Migration takes too long
  Fix:     Run during off-hours
           Check table size first

  Problem: Constraint violation
  Fix:     Check logs in /logs/ for specific fix instructions

┌──────────────────────────────────────────────────────────────────────────────┐
│ 📚 DOCUMENTATION                                                            │
└──────────────────────────────────────────────────────────────────────────────┘

  Quick Start:     postgres/migrations/QUICK_START.md
  Full Docs:       postgres/migrations/README.md
  Summary:         MIGRATION_SUMMARY.md
  File Manifest:   postgres/migrations/FILE_MANIFEST.md

┌──────────────────────────────────────────────────────────────────────────────┐
│ 🔍 VERIFICATION QUERIES                                                     │
└──────────────────────────────────────────────────────────────────────────────┘

  Check columns:
    SELECT column_name FROM information_schema.columns
    WHERE table_name = 'market_data';

  Check completeness:
    SELECT COUNT(*), COUNT(open), COUNT(high), COUNT(low), COUNT(close)
    FROM market_data;

  Check indexes:
    SELECT indexname FROM pg_indexes WHERE tablename = 'market_data';

  Check constraints:
    SELECT conname FROM pg_constraint WHERE conrelid = 'market_data'::regclass;

┌──────────────────────────────────────────────────────────────────────────────┐
│ 📊 SCHEMA TRANSFORMATION                                                    │
└──────────────────────────────────────────────────────────────────────────────┘

  BEFORE:  timestamp | symbol | price | bid | ask | volume
              ↓
  AFTER:   timestamp | symbol | timeframe | open | high | low | close |
           volume | bid | ask | spread | data_quality

┌──────────────────────────────────────────────────────────────────────────────┐
│ 🎯 EXECUTION CHECKLIST                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

  PRE-MIGRATION:
    [ ] Check current status
    [ ] Verify disk space (+60% of table size)
    [ ] Notify users (if applicable)
    [ ] Ensure no critical processes running

  DURING MIGRATION:
    [ ] Run: ./scripts/run_migrations.sh
    [ ] Confirm when prompted
    [ ] Monitor logs

  POST-MIGRATION:
    [ ] Verify status
    [ ] Run validation queries
    [ ] Test application queries
    [ ] Monitor performance

╔══════════════════════════════════════════════════════════════════════════════╗
║                         READY TO MIGRATE? RUN:                               ║
║                    ./scripts/run_migrations.sh                               ║
╚══════════════════════════════════════════════════════════════════════════════╝

Version: 1.0 | Date: 2025-10-22 | Status: Production Ready
