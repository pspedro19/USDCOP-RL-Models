# ==============================================
# USDCOP TRADING SYSTEM - ENVIRONMENT TEMPLATE
# ==============================================
#
# INSTRUCTIONS:
# 1. Copy this file to .env: cp .env.example .env
# 2. Replace all placeholder values with your actual credentials
# 3. Generate strong random passwords using: openssl rand -base64 32
# 4. NEVER commit the .env file to git (it's in .gitignore)
# 5. Set file permissions: chmod 600 .env
#
# SECURITY WARNINGS:
# - This system requires 24 TwelveData API keys for full operation
# - All passwords MUST be changed from these placeholders
# - Weak passwords (like admin123) are security vulnerabilities
# - Keep this file secure and backed up offline
#
# Last Updated: 2025-10-22
# ==============================================

# ==============================================
# DATABASE CONFIGURATION (PostgreSQL/TimescaleDB)
# ==============================================
# Used by: postgres, all backend services, dashboard
# Connection format: postgresql://USER:PASSWORD@HOST:PORT/DATABASE

POSTGRES_USER=admin
POSTGRES_PASSWORD=CHANGE_ME_GENERATE_WITH_openssl_rand_base64_32
POSTGRES_DB=usdcop_trading

# ==============================================
# REDIS CONFIGURATION (In-Memory Cache)
# ==============================================
# Used by: redis, websocket-service, real-time services
# Important: Redis password protects against unauthorized access

REDIS_PASSWORD=CHANGE_ME_GENERATE_WITH_openssl_rand_base64_32

# ==============================================
# MINIO CONFIGURATION (S3-Compatible Storage)
# ==============================================
# Used by: minio, mlflow, airflow, pipeline services
# Stores: pipeline data (L0-L6), ML models, artifacts
# Access Console: http://localhost:9001

MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=CHANGE_ME_GENERATE_WITH_openssl_rand_base64_32

# ==============================================
# AIRFLOW CONFIGURATION (Pipeline Orchestration)
# ==============================================
# Used by: airflow-init, airflow-scheduler, airflow-webserver
# Access UI: http://localhost:8080
# Username: admin (set below)

AIRFLOW_USER=admin
AIRFLOW_PASSWORD=CHANGE_ME_GENERATE_WITH_openssl_rand_base64_32

# Airflow Security Keys (CRITICAL - Generate these!)
# Fernet key: python3 -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
# Secret key: openssl rand -base64 32
AIRFLOW_FERNET_KEY=CHANGE_ME_USE_python_cryptography_fernet_generate_key
AIRFLOW_SECRET_KEY=CHANGE_ME_GENERATE_WITH_openssl_rand_base64_32

# ==============================================
# GRAFANA CONFIGURATION (Monitoring Dashboard)
# ==============================================
# Used by: grafana service
# Access UI: http://localhost:3002
# Username: admin (set below)

GRAFANA_USER=admin
GRAFANA_PASSWORD=CHANGE_ME_GENERATE_WITH_openssl_rand_base64_32

# ==============================================
# PGADMIN CONFIGURATION (Database Management)
# ==============================================
# Used by: pgadmin service
# Access UI: http://localhost:5050
# Login with email and password below

PGADMIN_EMAIL=admin@trading.com
PGADMIN_PASSWORD=CHANGE_ME_GENERATE_WITH_openssl_rand_base64_32

# ==============================================
# TWELVEDATA API KEYS - LEGACY GROUP (8 keys)
# ==============================================
# CRITICAL: These MUST be real TwelveData API keys
# Get your keys from: https://twelvedata.com/apikey
# Free tier: 800 API calls/day per key (8 keys = 6,400 calls/day)
# Used by: usdcop-realtime-orchestrator, airflow DAGs
#
# WARNING: The old docker-compose.yml had exposed API keys in defaults
# Those keys are likely invalid or compromised - get new ones!

TWELVEDATA_API_KEY_1=YOUR_REAL_TWELVEDATA_API_KEY_1
TWELVEDATA_API_KEY_2=YOUR_REAL_TWELVEDATA_API_KEY_2
TWELVEDATA_API_KEY_3=YOUR_REAL_TWELVEDATA_API_KEY_3
TWELVEDATA_API_KEY_4=YOUR_REAL_TWELVEDATA_API_KEY_4
TWELVEDATA_API_KEY_5=YOUR_REAL_TWELVEDATA_API_KEY_5
TWELVEDATA_API_KEY_6=YOUR_REAL_TWELVEDATA_API_KEY_6
TWELVEDATA_API_KEY_7=YOUR_REAL_TWELVEDATA_API_KEY_7
TWELVEDATA_API_KEY_8=YOUR_REAL_TWELVEDATA_API_KEY_8

# ==============================================
# TWELVEDATA API KEYS - GROUP 1 (Enhanced L0 Pipeline)
# ==============================================
# CRITICAL: These MUST be real TwelveData API keys
# Used by: optimized-l0-validator, airflow-scheduler, airflow-webserver
# Purpose: High-frequency L0 data acquisition with intelligent gap filling
#
# SECURITY: Generate NEW API keys from TwelveData
# Visit: https://twelvedata.com/account/api-keys
# Generate 8 new API keys and set them below

API_KEY_G1_1=YOUR_NEW_TWELVEDATA_API_KEY_G1_1
API_KEY_G1_2=YOUR_NEW_TWELVEDATA_API_KEY_G1_2
API_KEY_G1_3=YOUR_NEW_TWELVEDATA_API_KEY_G1_3
API_KEY_G1_4=YOUR_NEW_TWELVEDATA_API_KEY_G1_4
API_KEY_G1_5=YOUR_NEW_TWELVEDATA_API_KEY_G1_5
API_KEY_G1_6=YOUR_NEW_TWELVEDATA_API_KEY_G1_6
API_KEY_G1_7=YOUR_NEW_TWELVEDATA_API_KEY_G1_7
API_KEY_G1_8=YOUR_NEW_TWELVEDATA_API_KEY_G1_8

# ==============================================
# TWELVEDATA API KEYS - GROUP 2 (Enhanced L0 Pipeline)
# ==============================================
# SECURITY: Generate NEW API keys from TwelveData (Group 2)
# Visit: https://twelvedata.com/account/api-keys
# Generate 8 additional API keys for redundancy

API_KEY_G2_1=YOUR_NEW_TWELVEDATA_API_KEY_G2_1
API_KEY_G2_2=YOUR_NEW_TWELVEDATA_API_KEY_G2_2
API_KEY_G2_3=YOUR_NEW_TWELVEDATA_API_KEY_G2_3
API_KEY_G2_4=YOUR_NEW_TWELVEDATA_API_KEY_G2_4
API_KEY_G2_5=YOUR_NEW_TWELVEDATA_API_KEY_G2_5
API_KEY_G2_6=YOUR_NEW_TWELVEDATA_API_KEY_G2_6
API_KEY_G2_7=YOUR_NEW_TWELVEDATA_API_KEY_G2_7
API_KEY_G2_8=YOUR_NEW_TWELVEDATA_API_KEY_G2_8

# ==============================================
# LLM API KEYS (Alpha Arena Style)
# ==============================================
# Required for LLM strategies (L5C pipeline)
# Used by: alpha-arena-api, LLM strategy
#
# DeepSeek V3 (Primary - Alpha Arena Season 1 Winner +130%)
# Get key from: https://platform.deepseek.com/api-keys
# Cost: ~$0.14 per 1M tokens (very affordable)

DEEPSEEK_API_KEY=YOUR_DEEPSEEK_API_KEY

# Anthropic Claude Sonnet 4.5 (Fallback - Reliable risk-aware)
# Get key from: https://console.anthropic.com/api-keys
# Cost: ~$3 per 1M tokens

ANTHROPIC_API_KEY=YOUR_ANTHROPIC_API_KEY

# Optional: OpenAI GPT (if you want to compare)
# OPENAI_API_KEY=YOUR_OPENAI_API_KEY

# ==============================================
# MT5 TRADING CONFIGURATION (Optional)
# ==============================================
# Required only if you're using MetaTrader 5 integration
# Leave these as placeholders if not using MT5

MT5_LOGIN=YOUR_MT5_ACCOUNT_LOGIN
MT5_PASSWORD=YOUR_MT5_ACCOUNT_PASSWORD
MT5_SERVER=YOUR_MT5_BROKER_SERVER

# ==============================================
# SECURITY & MONITORING (Optional but Recommended)
# ==============================================

# JWT Secret for API Authentication
# Generate with: openssl rand -base64 64
JWT_SECRET=YOUR_JWT_SECRET_GENERATE_WITH_openssl_rand_base64_64

# Slack Webhook for System Alerts (Optional)
# Create webhook at: https://api.slack.com/messaging/webhooks
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# Email SMTP Configuration for Alerts (Optional)
# For Gmail, use an App Password: https://support.google.com/accounts/answer/185833
EMAIL_SMTP_SERVER=smtp.gmail.com
EMAIL_SMTP_USER=your_email@gmail.com
EMAIL_SMTP_PASSWORD=YOUR_GMAIL_APP_PASSWORD

# ==============================================
# APPLICATION CONFIGURATION
# ==============================================
# These typically don't need to be changed unless you have port conflicts

NODE_ENV=production
API_BASE_URL=http://localhost:3000/api
DASHBOARD_PORT=3000
GRAFANA_PORT=3001
AIRFLOW_PORT=8080

# ==============================================
# PRE-DEPLOYMENT SECURITY CHECKLIST
# ==============================================
# Before running docker-compose up, verify:
#
# [ ] All CHANGE_ME placeholders have been replaced
# [ ] All 24 TwelveData API keys are real and valid
# [ ] All exposed API keys from Group 1 & 2 have been revoked
# [ ] New API keys generated for Group 1 & 2
# [ ] Strong passwords generated (32+ characters)
# [ ] Airflow Fernet key generated using Python cryptography
# [ ] File permissions set: chmod 600 .env
# [ ] .env is confirmed in .gitignore
# [ ] This file (.env.example) remains in git as template
# [ ] Backup copy of .env stored securely offline
# [ ] Access restricted to authorized personnel only
#
# ==============================================
# POST-DEPLOYMENT VALIDATION
# ==============================================
# After system starts, verify:
#
# [ ] All services started successfully: docker-compose ps
# [ ] No services showing "Exited" status
# [ ] Dashboard accessible: http://localhost:5000
# [ ] Airflow accessible: http://localhost:8080
# [ ] Can login to Airflow with AIRFLOW_USER/AIRFLOW_PASSWORD
# [ ] MinIO accessible: http://localhost:9001
# [ ] Can login to MinIO with MINIO_ACCESS_KEY/MINIO_SECRET_KEY
# [ ] Database accessible: psql -h localhost -U admin -d usdcop_trading
# [ ] Check logs for any authentication errors: docker-compose logs
#
# ==============================================
# TROUBLESHOOTING
# ==============================================
#
# Error: "No value for variable: POSTGRES_PASSWORD"
# Solution: Ensure all required variables are set in .env
#
# Error: "FATAL: password authentication failed"
# Solution: Verify passwords in .env match what services expect
#
# Error: "TwelveData API key invalid"
# Solution: Verify API keys are active in TwelveData dashboard
#
# Error: "Redis connection refused"
# Solution: Check REDIS_PASSWORD matches between services
#
# For more help, see: docs/TROUBLESHOOTING.md
# ==============================================
