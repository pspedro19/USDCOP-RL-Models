# Contract Testing Configuration
# =============================
# Configuration for Phase 6 Contract Testing

# Service Contracts
services:
  trading-app:
    name: "Trading Application"
    version: "1.0.0"
    base_url: "http://localhost:8000"
    contracts:
      - type: "api"
        endpoint: "/health"
        method: "GET"
        expected_status: 200
        schema:
          type: "object"
          properties:
            status:
              type: "string"
              enum: ["healthy", "unhealthy", "degraded"]
            timestamp:
              type: "string"
              format: "date-time"
            version:
              type: "string"
          required: ["status", "timestamp"]
      
      - type: "api"
        endpoint: "/metrics"
        method: "GET"
        expected_status: 200
        schema:
          type: "string"
          pattern: ".*trading_.*"
      
      - type: "api"
        endpoint: "/api/v1/trades"
        method: "GET"
        expected_status: 200
        schema:
          type: "object"
          properties:
            trades:
              type: "array"
              items:
                type: "object"
                properties:
                  id:
                    type: "string"
                  symbol:
                    type: "string"
                  side:
                    type: "string"
                    enum: ["buy", "sell"]
                  quantity:
                    type: "number"
                  price:
                    type: "number"
                  timestamp:
                    type: "string"
                    format: "date-time"
                required: ["id", "symbol", "side", "quantity", "price", "timestamp"]
            total:
              type: "integer"
            page:
              type: "integer"
            limit:
              type: "integer"
          required: ["trades", "total"]
  
  data-pipeline:
    name: "Data Pipeline Service"
    version: "1.0.0"
    base_url: "http://localhost:8001"
    contracts:
      - type: "api"
        endpoint: "/health"
        method: "GET"
        expected_status: 200
        schema:
          type: "object"
          properties:
            status:
              type: "string"
            pipeline_status:
              type: "string"
            last_processed:
              type: "string"
              format: "date-time"
          required: ["status", "pipeline_status"]
      
      - type: "api"
        endpoint: "/api/v1/data/status"
        method: "GET"
        expected_status: 200
        schema:
          type: "object"
          properties:
            data_sources:
              type: "array"
              items:
                type: "object"
                properties:
                  name:
                    type: "string"
                  status:
                    type: "string"
                  last_update:
                    type: "string"
                    format: "date-time"
                  record_count:
                    type: "integer"
                required: ["name", "status", "last_update"]
          required: ["data_sources"]
  
  trading-engine:
    name: "Trading Engine"
    version: "1.0.0"
    base_url: "http://localhost:8002"
    contracts:
      - type: "api"
        endpoint: "/health"
        method: "GET"
        expected_status: 200
        schema:
          type: "object"
          properties:
            status:
              type: "string"
            engine_status:
              type: "string"
            active_strategies:
              type: "integer"
            last_trade:
              type: "string"
              format: "date-time"
          required: ["status", "engine_status"]
      
      - type: "api"
        endpoint: "/api/v1/orders"
        method: "POST"
        expected_status: 201
        request_schema:
          type: "object"
          properties:
            symbol:
              type: "string"
            side:
              type: "string"
              enum: ["buy", "sell"]
            quantity:
              type: "number"
              minimum: 0.01
            price:
              type: "number"
              minimum: 0.01
            order_type:
              type: "string"
              enum: ["market", "limit", "stop"]
            strategy_id:
              type: "string"
          required: ["symbol", "side", "quantity", "price", "order_type"]
        response_schema:
          type: "object"
          properties:
            order_id:
              type: "string"
            status:
              type: "string"
              enum: ["pending", "filled", "cancelled", "rejected"]
            timestamp:
              type: "string"
              format: "date-time"
            message:
              type: "string"
          required: ["order_id", "status", "timestamp"]

# Data Contracts
data_contracts:
  - service_from: "data-pipeline"
    service_to: "trading-engine"
    data_schema: "market_data_schema.json"
    validation_rules:
      - "timestamp_required"
      - "price_positive"
      - "volume_positive"
      - "symbol_format"
  
  - service_from: "trading-engine"
    service_to: "trading-app"
    data_schema: "trade_execution_schema.json"
    validation_rules:
      - "order_id_unique"
      - "execution_time_valid"
      - "price_slippage_acceptable"
  
  - service_from: "trading-app"
    service_to: "data-pipeline"
    data_schema: "user_preferences_schema.json"
    validation_rules:
      - "user_id_valid"
      - "preferences_serializable"
      - "update_timestamp_current"

# Schema Definitions
schemas:
  market_data_schema:
    type: "object"
    properties:
      symbol:
        type: "string"
        pattern: "^[A-Z]{6}$"
      timestamp:
        type: "string"
        format: "date-time"
      open:
        type: "number"
        minimum: 0
      high:
        type: "number"
        minimum: 0
      low:
        type: "number"
        minimum: 0
      close:
        type: "number"
        minimum: 0
      volume:
        type: "number"
        minimum: 0
      bid:
        type: "number"
        minimum: 0
      ask:
        type: "number"
        minimum: 0
    required: ["symbol", "timestamp", "open", "high", "low", "close", "volume"]
  
  trade_execution_schema:
    type: "object"
    properties:
      order_id:
        type: "string"
        format: "uuid"
      symbol:
        type: "string"
      side:
        type: "string"
        enum: ["buy", "sell"]
      quantity:
        type: "number"
        minimum: 0.01
      executed_price:
        type: "number"
        minimum: 0.01
      execution_time:
        type: "string"
        format: "date-time"
      fees:
        type: "number"
        minimum: 0
      status:
        type: "string"
        enum: ["executed", "partial", "cancelled"]
    required: ["order_id", "symbol", "side", "quantity", "executed_price", "execution_time", "status"]
  
  user_preferences_schema:
    type: "object"
    properties:
      user_id:
        type: "string"
        format: "uuid"
      risk_tolerance:
        type: "string"
        enum: ["low", "medium", "high"]
      preferred_symbols:
        type: "array"
        items:
          type: "string"
      max_position_size:
        type: "number"
        minimum: 0
      stop_loss_percentage:
        type: "number"
        minimum: 0
        maximum: 100
      take_profit_percentage:
        type: "number"
        minimum: 0
        maximum: 100
      last_updated:
        type: "string"
        format: "date-time"
    required: ["user_id", "risk_tolerance", "last_updated"]

# Validation Rules
validation_rules:
  timestamp_required:
    description: "All data must include a valid timestamp"
    rule: "timestamp_field_required"
    severity: "error"
  
  price_positive:
    description: "All price fields must be positive numbers"
    rule: "positive_number_validation"
    severity: "error"
  
  volume_positive:
    description: "Volume must be a positive number"
    rule: "positive_number_validation"
    severity: "error"
  
  symbol_format:
    description: "Symbol must be in correct format (6 uppercase letters)"
    rule: "regex_pattern_validation"
    pattern: "^[A-Z]{6}$"
    severity: "error"
  
  order_id_unique:
    description: "Order ID must be unique across the system"
    rule: "unique_identifier_validation"
    severity: "error"
  
  execution_time_valid:
    description: "Execution time must be within acceptable range"
    rule: "time_range_validation"
    min_offset: "-1h"
    max_offset: "+1h"
    severity: "warning"
  
  price_slippage_acceptable:
    description: "Price slippage must be within acceptable limits"
    rule: "percentage_difference_validation"
    max_difference: 5.0
    severity: "warning"
  
  user_id_valid:
    description: "User ID must be a valid UUID"
    rule: "uuid_format_validation"
    severity: "error"
  
  preferences_serializable:
    description: "User preferences must be serializable"
    rule: "json_serialization_validation"
    severity: "error"
  
  update_timestamp_current:
    description: "Update timestamp must be current (within 1 hour)"
    rule: "time_range_validation"
    max_offset: "+1h"
    severity: "warning"

# Testing Configuration
testing:
  parallel_validation: true
  timeout: 30
  retries: 3
  
  # Contract validation frequency
  validation_schedule:
    api_contracts: "on_deploy"
    data_contracts: "continuous"
    schema_validation: "on_change"
  
  # Reporting
  report_format: "html"
  include_examples: true
  include_validation_details: true
  
  # Notifications
  notify_on_failure: true
  notification_channels:
    - "slack"
    - "email"
  
  # Thresholds
  failure_threshold: 0.95  # 95% of contracts must pass
  warning_threshold: 0.98  # 98% of contracts must pass for no warnings
