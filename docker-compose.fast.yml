version: '3.8'

# Fast Docker Compose override for quick Airflow startup
# Usage: docker-compose -f docker-compose.yml -f docker-compose.fast.yml up

services:
  # Override Airflow services to use minimal configuration
  airflow-init:
    build:
      context: ./airflow
      dockerfile: Dockerfile.minimal
    command: >
      bash -c "
      airflow db init &&
      airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@admin.com --password admin123 || true
      "
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor  # Use LocalExecutor for faster startup
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER:-admin}:${POSTGRES_PASSWORD:-admin123}@postgres:5432/${POSTGRES_DB:-usdcop_trading}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW_FERNET_KEY:-Fernet.generate_key()}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY:-your-secret-key}
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'True'
      AIRFLOW__LOGGING__LOGGING_LEVEL: 'INFO'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_USER:-admin}
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_PASSWORD:-admin123}

  airflow-scheduler:
    build:
      context: ./airflow
      dockerfile: Dockerfile.minimal
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor  # Use LocalExecutor for faster startup
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER:-admin}:${POSTGRES_PASSWORD:-admin123}@postgres:5432/${POSTGRES_DB:-usdcop_trading}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW_FERNET_KEY:-Fernet.generate_key()}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY:-your-secret-key}
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'True'
      AIRFLOW__LOGGING__LOGGING_LEVEL: 'INFO'
      # TwelveData API Keys for L0 Pipeline
      TWELVEDATA_API_KEY_1: ${TWELVEDATA_API_KEY_1}
      TWELVEDATA_API_KEY_2: ${TWELVEDATA_API_KEY_2}
      TWELVEDATA_API_KEY_3: ${TWELVEDATA_API_KEY_3}
      TWELVEDATA_API_KEY_4: ${TWELVEDATA_API_KEY_4}
      TWELVEDATA_API_KEY_5: ${TWELVEDATA_API_KEY_5}
      TWELVEDATA_API_KEY_6: ${TWELVEDATA_API_KEY_6}
      TWELVEDATA_API_KEY_7: ${TWELVEDATA_API_KEY_7}
      TWELVEDATA_API_KEY_8: ${TWELVEDATA_API_KEY_8}
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8793/health', timeout=10)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s  # Reduced start period

  airflow-webserver:
    build:
      context: ./airflow
      dockerfile: Dockerfile.minimal
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor  # Use LocalExecutor for faster startup
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER:-admin}:${POSTGRES_PASSWORD:-admin123}@postgres:5432/${POSTGRES_DB:-usdcop_trading}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW_FERNET_KEY:-Fernet.generate_key()}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY:-your-secret-key}
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'True'
      AIRFLOW__LOGGING__LOGGING_LEVEL: 'INFO'
      AIRFLOW__WEBSERVER__WEB_SERVER_WORKER_TIMEOUT: 120
      AIRFLOW__WEBSERVER__WORKER_REFRESH_BATCH_SIZE: 1
      AIRFLOW__WEBSERVER__RELOAD_ON_PLUGIN_CHANGE: 'False'
      # TwelveData API Keys for L0 Pipeline
      TWELVEDATA_API_KEY_1: ${TWELVEDATA_API_KEY_1}
      TWELVEDATA_API_KEY_2: ${TWELVEDATA_API_KEY_2}
      TWELVEDATA_API_KEY_3: ${TWELVEDATA_API_KEY_3}
      TWELVEDATA_API_KEY_4: ${TWELVEDATA_API_KEY_4}
      TWELVEDATA_API_KEY_5: ${TWELVEDATA_API_KEY_5}
      TWELVEDATA_API_KEY_6: ${TWELVEDATA_API_KEY_6}
      TWELVEDATA_API_KEY_7: ${TWELVEDATA_API_KEY_7}
      TWELVEDATA_API_KEY_8: ${TWELVEDATA_API_KEY_8}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 15s  # More frequent checks
      timeout: 10s
      retries: 5
      start_period: 30s  # Reduced start period

  # Remove the worker service for LocalExecutor mode
  airflow-worker:
    profiles:
      - disabled  # Disable worker in fast mode

  # Disable heavy services for faster startup
  usdcop-realtime-orchestrator:
    profiles:
      - disabled
  
  usdcop-realtime-service:
    profiles:
      - disabled
  
  realtime-data-service:
    profiles:
      - disabled
  
  health-monitor:
    profiles:
      - disabled
  
  websocket-service:
    profiles:
      - disabled
  
  dashboard:
    profiles:
      - disabled
  
  prometheus:
    profiles:
      - disabled
  
  grafana:
    profiles:
      - disabled
  
  nginx:
    profiles:
      - disabled