# ==================================================================
# MLOps Bucket Provisioner Init Container
# ==================================================================
# This Dockerfile creates an init container that provisions MinIO
# buckets based on YAML configuration before main services start
# ==================================================================

FROM python:3.11-slim

# Metadata
LABEL maintainer="MLOps Team"
LABEL description="MinIO bucket provisioner init container for USDCOP Trading System"
LABEL version="1.0.0"

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.bucket-init.txt /app/
RUN pip install --no-cache-dir -r requirements.bucket-init.txt

# Copy configuration and scripts
COPY config/ /app/config/
COPY scripts/mlops/ /app/scripts/mlops/

# Make scripts executable
RUN chmod +x /app/scripts/mlops/init_container_startup.sh
RUN chmod +x /app/scripts/mlops/bucket_provisioner.py

# Create necessary directories
RUN mkdir -p /tmp/logs /tmp/health

# Set script directory in PATH
ENV PATH="/app/scripts/mlops:${PATH}"

# Health check
HEALTHCHECK --interval=10s --timeout=5s --start-period=30s --retries=3 \
    CMD test -f /tmp/bucket_init_complete || exit 1

# Default environment configuration
ENV ENVIRONMENT=production
ENV CONFIG_DIR=/app/config
ENV BUCKET_CONFIG_FILE=minio-buckets.yaml
ENV LOG_LEVEL=INFO

# Create non-root user
RUN groupadd -r bucketinit && useradd -r -g bucketinit bucketinit
RUN chown -R bucketinit:bucketinit /app /tmp/logs /tmp/health
USER bucketinit

# Run the init script
CMD ["/app/scripts/mlops/init_container_startup.sh"]